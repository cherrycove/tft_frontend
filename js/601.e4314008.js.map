{"version":3,"file":"js/601.e4314008.js","mappings":"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","sources":["webpack://tft_frontend/./src/views/Admin.vue","webpack://tft_frontend/./src/views/Admin.vue?98f8","webpack://tft_frontend/./node_modules/core-js/modules/es.iterator.map.js"],"sourcesContent":["<template>\n  <div class=\"admin-container\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"24\">\n        <el-card class=\"admin-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>组合生成</span>\n            </div>\n          </template>\n\n          <el-form :model=\"generationForm\" label-width=\"120px\">\n            <el-form-item label=\"游戏版本\">\n              <el-input v-model=\"generationForm.version\" placeholder=\"请输入版本号，例如：14.1\" />\n            </el-form-item>\n\n            <el-form-item label=\"人口范围\">\n              <el-checkbox-group v-model=\"generationForm.populations\">\n                <el-checkbox\n                  v-for=\"pop in populationOptions\"\n                  :key=\"pop\"\n                  :label=\"pop\"\n                >\n                  {{ pop }}人口\n                </el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n\n            <el-form-item label=\"最大羁绊等级\">\n              <el-select v-model=\"generationForm.trait_tag\" placeholder=\"选择羁绊等级标签\" clearable>\n                <el-option label=\"全部 (默认)\" value=\"\" />\n                <el-option label=\"黄铜\" value=\"黄铜\" />\n                <el-option label=\"白银\" value=\"白银\" />\n                <el-option label=\"黄金\" value=\"黄金\" />\n                <el-option label=\"棱彩\" value=\"棱彩\" />\n              </el-select>\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" :loading=\"generating\" @click=\"generateCompositions\">\n                开始生成\n              </el-button>\n              <el-button type=\"danger\" @click=\"deleteCompositions\">\n                删除当前版本组合\n              </el-button>\n            </el-form-item>\n          </el-form>\n\n          <el-divider />\n\n          <div class=\"generation-status\">\n            <h3>生成状态</h3>\n\n            <el-table :data=\"statusList\" style=\"width: 100%\">\n              <el-table-column prop=\"population\" label=\"人口\" width=\"100\" />\n              <el-table-column prop=\"version\" label=\"版本\" width=\"120\" />\n              <el-table-column prop=\"count\" label=\"组合数量\" width=\"120\" />\n              <el-table-column label=\"状态\" width=\"120\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"getStatusType(scope.row.status)\">\n                    {{ getStatusText(scope.row.status) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"进度\">\n                <template #default=\"scope\">\n                  <el-progress\n                    :percentage=\"scope.row.progress\"\n                    :status=\"getProgressStatus(scope.row.status)\"\n                  />\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"120\">\n                <template #default=\"scope\">\n                  <el-button\n                    size=\"small\"\n                    :disabled=\"scope.row.status !== 'completed'\"\n                    @click=\"viewCompositions(scope.row)\"\n                  >\n                    查看组合\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\">\n      <el-col :span=\"24\">\n        <el-card class=\"admin-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>数据管理</span>\n            </div>\n          </template>\n\n          <div class=\"data-management\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"8\">\n                <el-card class=\"data-card\">\n                  <template #header>\n                    <div class=\"card-header\">\n                      <span>棋子管理</span>\n                    </div>\n                  </template>\n                  <div class=\"data-stats\">\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">总数量:</span>\n                      <span class=\"stat-value\">{{ championCount }}</span>\n                    </div>\n                  </div>\n                  <div class=\"data-actions\">\n                    <el-button type=\"primary\" @click=\"navigateTo('/champions')\">管理棋子</el-button>\n                  </div>\n                </el-card>\n              </el-col>\n\n              <el-col :span=\"8\">\n                <el-card class=\"data-card\">\n                  <template #header>\n                    <div class=\"card-header\">\n                      <span>羁绊管理</span>\n                    </div>\n                  </template>\n                  <div class=\"data-stats\">\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">总数量:</span>\n                      <span class=\"stat-value\">{{ traitCount }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">种族:</span>\n                      <span class=\"stat-value\">{{ originTraitCount }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">职业:</span>\n                      <span class=\"stat-value\">{{ classTraitCount }}</span>\n                    </div>\n                  </div>\n                  <div class=\"data-actions\">\n                    <el-button type=\"primary\" @click=\"navigateTo('/traits')\">管理羁绊</el-button>\n                  </div>\n                </el-card>\n              </el-col>\n\n              <el-col :span=\"8\">\n                <el-card class=\"data-card\">\n                  <template #header>\n                    <div class=\"card-header\">\n                      <span>组合管理</span>\n                    </div>\n                  </template>\n                  <div class=\"data-stats\">\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">当前版本:</span>\n                      <span class=\"stat-value\">{{ currentVersion }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">组合数量:</span>\n                      <span class=\"stat-value\">{{ compositionCount }}</span>\n                    </div>\n                  </div>\n                  <div class=\"data-actions\">\n                    <el-button type=\"primary\" @click=\"navigateTo('/compositions')\">查看组合</el-button>\n                  </div>\n                </el-card>\n              </el-col>\n            </el-row>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onUnmounted, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'AdminView',\n  setup () {\n    const store = useStore()\n    const router = useRouter()\n\n    // 状态\n    const champions = computed(() => store.state.champions.champions)\n    const traits = computed(() => store.state.traits.traits)\n    const compositions = computed(() => store.state.compositions.compositions)\n    const currentVersion = computed(() => store.state.version)\n    const generating = ref(false)\n\n    // 表单\n    const generationForm = reactive({\n      version: currentVersion.value,\n      populations: [4, 5, 6, 7, 8],\n      trait_tag: ''\n    })\n\n    // 生成状态\n    const statusList = ref([])\n    const statusCheckInterval = ref(null)\n\n    // 人口选项\n    const populationOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n    // 计算属性\n    const championCount = computed(() => champions.value.length)\n\n    const traitCount = computed(() => traits.value.length)\n\n    const originTraitCount = computed(() =>\n      traits.value.filter(t => t.type === 'origin').length\n    )\n\n    const classTraitCount = computed(() =>\n      traits.value.filter(t => t.type === 'class').length\n    )\n\n    const compositionCount = computed(() => compositions.value.length)\n\n    // 方法\n    const generateCompositions = async () => {\n      if (!generationForm.version) {\n        ElMessage.warning('请输入版本号')\n        return\n      }\n\n      if (generationForm.populations.length === 0) {\n        ElMessage.warning('请选择至少一个人口')\n        return\n      }\n\n      try {\n        generating.value = true\n\n        // 更新当前版本\n        await store.dispatch('setVersion', generationForm.version)\n\n        // 启动生成任务\n        await store.dispatch('compositions/generateCompositions', generationForm)\n\n        ElMessage.success('组合生成任务已启动')\n\n        // 初始化状态列表\n        statusList.value = generationForm.populations.map(population => ({\n          population,\n          version: generationForm.version,\n          status: 'pending',\n          count: 0,\n          progress: 0\n        }))\n\n        // 开始定期检查状态\n        startStatusCheck()\n      } catch (error) {\n        ElMessage.error('启动生成任务失败')\n      } finally {\n        generating.value = false\n      }\n    }\n\n    const deleteCompositions = async () => {\n      ElMessageBox.confirm(\n        `确定要删除版本 ${currentVersion.value} 的所有组合吗？`,\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await store.dispatch('compositions/deleteCompositionsByVersion')\n          ElMessage.success('组合删除成功')\n          // 重新加载组合\n          await store.dispatch('compositions/fetchCompositions', {})\n        } catch (error) {\n          ElMessage.error('删除组合失败')\n        }\n      }).catch(() => {\n        // 取消删除\n      })\n    }\n\n    const startStatusCheck = () => {\n      // 清除现有的检查间隔\n      if (statusCheckInterval.value) {\n        clearInterval(statusCheckInterval.value)\n      }\n\n      // 设置新的检查间隔\n      statusCheckInterval.value = setInterval(async () => {\n        let allCompleted = true\n\n        for (const status of statusList.value) {\n          if (status.status !== 'completed' && status.status !== 'failed') {\n            allCompleted = false\n\n            try {\n              const result = await store.dispatch('compositions/checkGenerationStatus', {\n                version: status.version,\n                population: status.population\n              })\n\n              // 更新状态\n              status.status = result.status\n              status.count = result.count\n              status.progress = result.progress\n            } catch (error) {\n              console.error('检查状态失败:', error)\n            }\n          }\n        }\n\n        // 如果所有任务都完成了，停止检查\n        if (allCompleted) {\n          clearInterval(statusCheckInterval.value)\n          statusCheckInterval.value = null\n        }\n      }, 5000) // 每5秒检查一次\n    }\n\n    const getStatusType = (status) => {\n      switch (status) {\n        case 'completed':\n          return 'success'\n        case 'in_progress':\n          return 'primary'\n        case 'pending':\n          return 'info'\n        case 'failed':\n          return 'danger'\n        default:\n          return 'info'\n      }\n    }\n\n    const getStatusText = (status) => {\n      switch (status) {\n        case 'completed':\n          return '已完成'\n        case 'in_progress':\n          return '生成中'\n        case 'pending':\n          return '等待中'\n        case 'failed':\n          return '失败'\n        default:\n          return '未知'\n      }\n    }\n\n    const getProgressPercentage = (status, progress) => {\n      if (status === 'completed') return 100\n      if (status === 'failed') return 100\n      return progress || 0\n    }\n\n    const getProgressStatus = (status) => {\n      switch (status) {\n        case 'completed':\n          return 'success'\n        case 'in_progress':\n          return ''\n        case 'pending':\n          return ''\n        case 'failed':\n          return 'exception'\n        default:\n          return ''\n      }\n    }\n\n    const viewCompositions = (row) => {\n      // 设置版本\n      store.dispatch('setVersion', row.version)\n      // 导航到组合页面并设置人口筛选\n      router.push({\n        path: '/compositions',\n        query: { population: row.population }\n      })\n    }\n\n    const navigateTo = (path) => {\n      router.push(path)\n    }\n\n    // 生命周期钩子\n    onMounted(async () => {\n      try {\n        await Promise.all([\n          store.dispatch('champions/fetchChampions'),\n          store.dispatch('traits/fetchTraits'),\n          store.dispatch('compositions/fetchCompositions', {})\n        ])\n      } catch (error) {\n        ElMessage.error('加载数据失败')\n      }\n    })\n\n    // 组件销毁时清除定时器\n    onUnmounted(() => {\n      if (statusCheckInterval.value) {\n        clearInterval(statusCheckInterval.value)\n      }\n    })\n\n    return {\n      champions,\n      traits,\n      compositions,\n      currentVersion,\n      generating,\n      generationForm,\n      statusList,\n      populationOptions,\n      championCount,\n      traitCount,\n      originTraitCount,\n      classTraitCount,\n      compositionCount,\n      generateCompositions,\n      deleteCompositions,\n      getStatusType,\n      getStatusText,\n      getProgressPercentage,\n      getProgressStatus,\n      viewCompositions,\n      navigateTo\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.admin-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.generation-status {\n  margin-top: 20px;\n}\n\n.generation-status h3 {\n  margin-top: 0;\n  margin-bottom: 15px;\n}\n\n.data-management {\n  margin-top: 10px;\n}\n\n.data-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.data-stats {\n  flex-grow: 1;\n  margin-bottom: 20px;\n}\n\n.stat-item {\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.stat-label {\n  color: #606266;\n}\n\n.stat-value {\n  font-weight: bold;\n  color: #303133;\n}\n\n.data-actions {\n  text-align: center;\n}\n</style>\n","import { render } from \"./Admin.vue?vue&type=template&id=ee07cfa0&scoped=true\"\nimport script from \"./Admin.vue?vue&type=script&lang=js\"\nexport * from \"./Admin.vue?vue&type=script&lang=js\"\n\nimport \"./Admin.vue?vue&type=style&index=0&id=ee07cfa0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ee07cfa0\"]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperThrowsOnInvalidIterator = require('../internals/iterator-helper-throws-on-invalid-iterator');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE && !iteratorHelperThrowsOnInvalidIterator('map', function () { /* empty */ });\nvar mapWithoutClosingOnEarlyError = !IS_PURE && !MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('map', TypeError);\n\nvar FORCED = IS_PURE || MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR || mapWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return callWithSafeIterationClosing(iterator, this.mapper, [result.value, this.counter++], true);\n});\n\n// `Iterator.prototype.map` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.map\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  map: function map(mapper) {\n    anObject(this);\n    try {\n      aCallable(mapper);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (mapWithoutClosingOnEarlyError) return call(mapWithoutClosingOnEarlyError, this, mapper);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper\n    });\n  }\n});\n"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_component_el_col","span","_component_el_card","header","_withCtx","_cache","_createElementVNode","_component_el_form","model","$setup","generationForm","_component_el_form_item","label","_component_el_input","version","$event","placeholder","_component_el_checkbox_group","populations","_Fragment","_renderList","populationOptions","pop","_createBlock","_component_el_checkbox","key","_component_el_select","trait_tag","clearable","_component_el_option","value","_component_el_button","type","loading","generating","onClick","generateCompositions","deleteCompositions","_component_el_divider","_hoisted_2","_component_el_table","data","statusList","style","_component_el_table_column","prop","width","default","scope","_component_el_tag","getStatusType","row","status","getStatusText","_component_el_progress","percentage","progress","getProgressStatus","size","disabled","viewCompositions","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","championCount","_hoisted_7","navigateTo","_hoisted_8","_hoisted_9","_hoisted_10","traitCount","_hoisted_11","_hoisted_12","originTraitCount","_hoisted_13","_hoisted_14","classTraitCount","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","currentVersion","_hoisted_19","_hoisted_20","compositionCount","_hoisted_21","name","setup","store","useStore","router","useRouter","champions","computed","state","traits","compositions","ref","reactive","statusCheckInterval","length","filter","t","async","dispatch","ElMessage","success","map","population","count","startStatusCheck","error","warning","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","clearInterval","setInterval","allCompleted","result","console","getProgressPercentage","push","path","query","onMounted","Promise","all","onUnmounted","__exports__","render","$","call","aCallable","anObject","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","iteratorClose","iteratorHelperThrowsOnInvalidIterator","iteratorHelperWithoutClosingOnEarlyError","IS_PURE","MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR","mapWithoutClosingOnEarlyError","TypeError","FORCED","IteratorProxy","iterator","this","next","done","mapper","counter","target","proto","real","forced"],"sourceRoot":""}